@model TS.Entities.TicketModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DisplayTicket</title>
    <meta http-equiv="imagetoolbar" content="no" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=9">
    <link href="~/Content/styles.css" media="screen" rel="Stylesheet" type="text/css" />
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js"></script>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js"></script>
    <link href='http://fonts.googleapis.com/css?family=Orbitron:700' rel='stylesheet' type='text/css'>
    <style type="text/css" media="screen">
        body {
            background: url(/images/bg1.jpg);
        }

        #cards {
            padding: 0;
            position: absolute;
            left: 50%;
            top: 50%;
            margin-top: -325px;
            margin-left: -400px;
            z-index: 0;
        }

            #cards li {
                display: block;
                position: absolute;
                top: 0px;
                left: 0px;
                width: 70px;
                height: 70px;
                z-index: 0;
                margin: 0;
            }

        .mainText {
            height: 70px;
            width: 70px;
            display: table-cell;
            font-size: 32px;
            color: aqua;
            background-color: darkred;
            font-family: Orbitron,cursive;
            vertical-align: middle;
            text-align: center;
            border-color: black;
            border-style: double;
            border-width: 5px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -o-border-radius: 10px;
            -ms-border-radius: 10px;
            -khtml-border-radius: 10px;
            border-radius: 10px;
        }

        .ImageBorder {
            height: 67px;
            width: 67px;
            display: table-cell;
            font-size: 32px;
            color: white;
            background-color: maroon;
            font-family: Orbitron,cursive;
            vertical-align: middle;
            text-align: center;
            border-color: darkgreen;
            border-style: dotted;
            border-width: 3px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -o-border-radius: 10px;
            -ms-border-radius: 10px;
            -khtml-border-radius: 10px;
            border-radius: 10px;
        }

        .buttonStyle {
            height: 40px;
            width: 100px;
            display: table-cell;
            font-size: 24px;
            color: white;
            background-color: dimgray;
            font-family: Orbitron,cursive;
            vertical-align: middle;
            text-align: center;
            border-color: maroon;
            border-style: solid;
            border-width: 2px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -o-border-radius: 10px;
            -ms-border-radius: 10px;
            -khtml-border-radius: 10px;
            border-radius: 10px;
            cursor: pointer;
            cursor: hand;
        }

        .buttonStyle2 {
            height: 50px;
            width: 140px;
            display: table-cell;
            font-size: 24px;
            color: white;
            background-color: dimgray;
            font-family: Orbitron,cursive;
            vertical-align: middle;
            text-align: center;
            border-color: maroon;
            border-style: solid;
            border-width: 2px;
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -o-border-radius: 10px;
            -ms-border-radius: 10px;
            -khtml-border-radius: 10px;
            border-radius: 10px;
            cursor: pointer;
            cursor: hand;
            text-decoration: none;
        }

        h4 {
            color: aqua;
            padding-left: 10px;
        }

        .resultsText {
            width: 220px;
            height: 570px;
            display: table-cell;
            font-size: 32px;
            color: aqua;
            background-color: transparent;
            font-family: Orbitron,cursive;
            vertical-align: middle;
            text-align: center;
            border-color: maroon;
            border-style: double;
            border-width: 5px;
            -webkit-border-radius: 30px;
            -moz-border-radius: 30px;
            -o-border-radius: 30px;
            -ms-border-radius: 30px;
            -khtml-border-radius: 30px;
            border-radius: 30px;
        }

        .gameOff {
            width: 50px;
            height: 50px;
            font-size: 32px;
            color: aqua;
            background-color: transparent;
            font-family: Orbitron,cursive;
            line-height: 50px;
            vertical-align: middle;
            text-align: center;
            border-color: white;
            border-style: double;
            border-width: 5px;
            -moz-border-radius: 50px;
            -webkit-border-radius: 50px;
        }

            .gameOff:hover {
                background-color: forestgreen;
            }

        .gameOn {
            width: 50px;
            height: 50px;
            font-size: 32px;
            color: aqua;
            background-color: forestgreen;
            font-family: Orbitron,cursive;
            line-height: 50px;
            vertical-align: middle;
            text-align: center;
            border-color: maroon;
            border-style: double;
            border-width: 5px;
            -moz-border-radius: 50px;
            -webkit-border-radius: 50px;
        }
    </style>

    <script type="text/javascript">

        $(document).ready(function () {

            // Self-executing recursive animation
            (function pulse() {
                $('.ImageBorder').delay(100).animate({ 'border-color': 'Transparent' }, 800).delay(500).animate({ 'border-color': 'maroon' }, 800, pulse);
            })();

        });
    </script>


    <script type="text/javascript">
        var ticketData = @Html.Raw(Json.Encode(Model.GamesData))

       // var startGameRecs = 


        alert(ticketData);
        //  alert(startGameRecs);
        var currentRec = -1;
        var totalRec = ticketData.length;
        //alert('Count' + jsData.list.length);
        //alert(jsData[0].BallsLevel2);
        function ShowData() {
            if (currentRec < totalRec) {
                currentRec = currentRec + 1;
            }
            else {
                currentRec = 0;
            }

            $('#div1').text(ticketData[currentRec].NumbersPlayed);
            var selRec = getRecords(ticketData, "RecordNum", currentRec);
            //  alert(selRec);
            $('#div2').text(selRec[0].ValueThisGame)

        }

        function getRecords(obj, key, val) {
            var objects = [];
            for (var i in obj) {
                if (!obj.hasOwnProperty(i)) continue;
                if (typeof obj[i] == 'object') {
                    objects = objects.concat(getRecords(obj[i], key, val));
                } else if (i == key && obj[key] == val) {
                    objects.push(obj);
                }
            }
            return objects;
        }

    </script>


</head>
<body>


    <ul id="cards"></ul>

    @using (Html.BeginForm("ViewTicket", "Keno"))
    {
        @Html.HiddenFor(m => m.ShowGameNumber)
        @Html.HiddenFor(m => m.CumulativeGameAmount)

        <script src="~/Scripts/prototype.s2.min.js" type="text/javascript"></script>

        <script type="text/javascript" language="javascript">


            //var selectedNumbers = Model.SelectedNumbers";  //"15,24,3,67";

            var selectedNumbers = "@Model.KenoGames[Model.CurrentGameNumber].ChildRecords[Model.KenoGames[Model.CurrentGameNumber].CurrentWay - 1].NumbersPlayed";  //"15,24,3,67";
            var selectedNumbersList = selectedNumbers.split(",");

            //var drawNumbers = "Model.DrawNumbers";  //"15,24,3,67";
            var drawNumbers = "@Model.KenoGames[Model.CurrentGameNumber].MasterRecord.BallDrawing";  //"15,24,3,67";
            var drawNumbersList = drawNumbers.split(",");
            //alert(drawNumbers);

            (function () {

                var names = $w('1 2 3 4 5 6 7 8 9 10 11 12 13 14 ' +
              '15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 3O 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80'),
              cards = names.map(function (name) {
                  var card = new Element('li', { id: name, style: 'margin-top:288px;left:361px;' });
                  var div1 = new Element('div', { id: name, class: 'ImageBorder' });
                  var div2 = new Element('div', { id: name, style: 'height:70px;width:70px;display:table-cell;font-size:32px;color:white;background-color:silver;font-family:Orbitron,cursive;vertical-align:middle;text-align:center;border-color:black;border-width:2px;-webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: 10px; -ms-border-radius: 10px; -khtml-border-radius: 10px; border-radius: 10px;' });
                  var picksDiv = new Element('div', { id: name, style: 'height:70px;width:70px;display:table-cell;font-size:32px;color:maroon;background-color:silver;font-family:Orbitron,cursive;vertical-align:middle;text-align:center;border-color:black;border-width:2px;-webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: 10px; -ms-border-radius: 10px; -khtml-border-radius: 10px; border-radius: 10px;' });
                  var div3 = new Element('div', { id: name, style: 'height:70px;width:70px;display:table-cell;font-size:32px;color:white;background-color:darkgreen;font-family:Orbitron,cursive;vertical-align:middle;text-align:center;border-color:black;border-width:2px;-webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: 10px; -ms-border-radius: 10px; -khtml-border-radius: 10px; border-radius: 10px;' });
                  var emptyDiv = new Element('div', { id: 'divmpty', style: 'height:70px;width:600px;display:table-cell;font-size:32px;color:white;background-color:silver;font-family:Orbitron,cursive;vertical-align:middle;text-align:center;border-color:black;border-width:2px;-webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: 10px; -ms-border-radius: 10px; -khtml-border-radius: 10px; border-radius: 10px;' });
                  //div1.insert(new Element('div', { width:'15px', value: 'images/' + name + '.png' }));



                  if ((jQuery.inArray(name, selectedNumbersList) >= 0) && (jQuery.inArray(name, drawNumbersList) >= 0)) {

                      div1.insert(name);

                      card.insert(div1);
                  }
                  else if (jQuery.inArray(name, selectedNumbersList) >= 0) {
                      picksDiv.insert(name);

                      card.insert(picksDiv);
                  }
                  else if (jQuery.inArray(name, drawNumbersList) >= 0) {

                      div3.insert(name);

                      card.insert(div3);
                  } else {
                      div2.insert(name);

                      card.insert(div2);
                  }

                  $('cards').insert(card);
                  return card;
              });

                function zIndexTransition(pos) { return pos > 0.8 ? 1 : 0; }
                function calculateTop(index) {
                    return 200 + (1 - S2.FX.Transitions.mirror((index / (names.length - 1)) * .7 + .15, S2.FX.Transitions.easeOutCirc)) * 300;
                }

                document.observe('cards:shuffle', function () {
                    names.sortBy(Math.random).each(function (card, index) {
                        $(card).morph('top:-200px;margin-top:' + calculateTop(index) + 'px;left:' + (51 + (index * 20)) + 'px;z-index:' + index, {
                            propertyTransitions: { top: 'mirror', left: 'swingFromTo', zIndex: zIndexTransition },
                            delay: Math.random() * 2, duration: 1
                        });
                    });
                });

                document.observe('cards:stack', function () {
                    names.sortBy(Math.random).each(function (card, index) {
                        $(card).morph('top:-200px;margin-top:' + calculateTop(index) + 'px;left:' + (51 + (names.length / 2) * 20) + 'px;z-index:' + index, {
                            propertyTransitions: { top: 'mirror', left: 'bouncePast', zIndex: zIndexTransition },
                            delay: Math.random() * 2, duration: 1
                        });
                    });
                });

                document.observe('cards:layup', function () {
                    names.each(function (card, index) {

                        $(card).show();

                        if (index > 39) {
                            $(card).morph('margin-top:' + (((index + 10) / 10).floor() * 72) + 'px;left:' + ((index + 10) % 10) * 72 + 'px', {
                                propertyTransitions: { marginTop: 'easeOutCirc', left: 'linear' },
                                duration: 0.0, delay: (index + 10) / 60
                            });
                        }
                        else {
                            $(card).morph('margin-top:' + ((index / 10).floor() * 72) + 'px;left:' + (index % 10) * 72 + 'px', {
                                propertyTransitions: { marginTop: 'easeOutCirc', left: 'linear' },
                                duration: 0.0, delay: index / 60
                            });
                        }


                    });
                });

                document.observe('cards:layup2', function () {
                    names.each(function (card, index) {

                        $(card).show();
                        if (index > 39) {
                            $(card).morph('margin-top:' + (((index + 10) / 10).floor() * 72) + 'px;left:' + ((index + 10) % 10) * 72 + 'px', {
                                propertyTransitions: { marginTop: 'easeOutCirc', left: 'linear' },
                                duration: 0, delay: 0
                            });
                        }
                        else {
                            $(card).morph('margin-top:' + ((index / 10).floor() * 72) + 'px;left:' + (index % 10) * 72 + 'px', {
                                propertyTransitions: { marginTop: 'easeOutCirc', left: 'linear' },
                                duration: 0, delay: 0
                            });
                        }


                    });
                });

                document.observe('cards:snake', function () {
                    var d = 7;
                    names.sortBy(Math.random).each(function (card, index) {
                        $(card).morph(
                  'margin-left:' + [-300, 300, -150, 150][index % 4] + 'px;margin-top:' +
                  (272 + (index - names.length / 2) * d) + 'px;left:371px;z-index:' + index, {
                      propertyTransitions: {
                          marginLeft: 'mirror', marginTop: 'bouncePast',
                          left: 'swingFromTo', zIndex: zIndexTransition
                      },
                      duration: 2
                  }).morph('margin-top:272px;left:' + (371 + (index - names.length / 2) * d) + 'px', {
                      propertyTransitions: { marginTop: 'easeInCirc', left: 'linear' },
                      duration: 1, delay: index / 15
                  }).morph('margin-top:' + (272 - (index - names.length / 2) * d) + 'px;left:371px', {
                      propertyTransitlions: { marginTop: 'easeOutCirc', left: 'linear' },
                      duration: 1
                  });
                    });
                });


                document.observe('cards:test1', function () {
                    names.each(function (card, index) {


                        if (index > 39) {

                            $(card).innerHTML = "";
                            var picksDiv = new Element('div', { id: name, style: 'height:70px;width:70px;display:table-cell;font-size:32px;color:maroon;background-color:silver;font-family:Orbitron,cursive;vertical-align:middle;text-align:center;border-color:black;border-width:2px;-webkit-border-radius: 10px; -moz-border-radius: 10px; -o-border-radius: 10px; -ms-border-radius: 10px; -khtml-border-radius: 10px; border-radius: 10px;' });
                            picksDiv.insert(index);

                            $(card).insert(picksDiv);

                        }
                        else {
                            $(card).morph('margin-top:' + ((index / 10).floor() * 72) + 'px;left:' + (index % 10) * 72 + 'px', {
                                propertyTransitions: { marginTop: 'easeOutCirc', left: 'linear' },
                                duration: 0.5, delay: index / 15
                            });
                        }


                    });
                });



                (function () {
                    //document.fire('cards:shuffle');
                    //document.fire('cards:stack');
                    document.fire('cards:layup');


                }).delay(1);

            })();



        </script>
   
        <div id="kenoDiv" class="mainText">
            KENO   GAME
        </div>
   
     
        <br />
        <br />
        <table border="0" cellpadding="0" cellspacing="0">
            <tr>

                <td>
                    <div class="resultsText">

                        <div id="gameNumberDisplay"></div>
                        <u>GAME @Model.KenoGames[Model.CurrentGameNumber].MasterRecord.GameNumberForDisplay.ToString() </u>
                        <br />
                        <br />
                        <br />
                        <table width="100%">
                            <tr>
                                <td align="center"><a href="#" class="buttonStyle2" onclick="javascript:ShowNextGame();">Next Game</a></td>
                               
                            </tr>
                        </table>
                        <br />
                        <br />
                        <br />
                        <br />
                        <br />
                        <div id="CurrentWayAmountDisplay"></div>
                        @Model.KenoGames[Model.CurrentGameNumber].ChildRecords[Model.KenoGames[Model.CurrentGameNumber].CurrentWay - 1].ValueThisGame.ToString("C")
                        <br />
                        <br />
                        <br />
                        <br />

                        WAY
                        <br />
                        <br />
                        <div id="CurrentWayDisplay"></div>
                        @Model.KenoGames[Model.CurrentGameNumber].CurrentWay of @Model.KenoGames[Model.CurrentGameNumber].ChildRecords.Count.ToString()
                        <br />
                        <br />
                        <br />
                        <table width="100%">
                            <tr>
                                <td align="center">
                                    <input type="button" value="Next Way" class="buttonStyle2" onclick="javascript:DisplayNextWay" /> /></td>
                            </tr>
                        </table>


                        <br />
                        <br />
                        <br />
                        TOTAL
                        <br />
                        <div id="CumulativeAmountDisplay"></div>
                        <br />@Model.CumulativeGameAmount.ToString("C")
                        <br />
                        <br />

                    </div>
                </td>
            </tr>
        </table>
    }





    <div>
        <br />
        <br />
        Numbers Played:
        <div id="div1"></div>
        <br />
        Other Data:
        <div id="div2"></div>
        <br />
        <input type="button" value="Show Game" onclick="javascript: ShowData();" />
    </div>
</body>
</html>


